import cv2
import numpy as np

# Specifying upper and lower ranges of color to detect in HSV format
# lower_red1 = np.array([0, 170, 100])    # Lower range of red
# upper_red1 = np.array([10, 255, 255])
# lower_red2 = np.array([170, 170, 100])  # Upper range of red
# upper_red2 = np.array([180, 255, 255])

# Capturing webcam footage
webcam_video = cv2.VideoCapture(0)

if not webcam_video.isOpened():
    print("Error: Could not open webcam.")
    exit()

while True:
    success, video = webcam_video.read()  # Reading webcam footage
    if not success:
        print("Error: Could not read frame.")
        break

    # Convert the video frame to HSV format
    img_hsv = cv2.cvtColor(video, cv2.COLOR_BGR2HSV)

    # Create a mask for red color
    # mask1 = cv2.inRange(img_hsv, lower_red1, upper_red1)
    # mask2 = cv2.inRange(img_hsv, lower_red2, upper_red2)
    # red_mask = mask1 | mask2

    # Apply GaussianBlur to reduce noise and improve circle detection
    blurred_mask = cv2.GaussianBlur(red_mask, (9, 9), 2)

    # Detect circles using HoughCircles
    circles = cv2.HoughCircles(
        blurred_mask,
        cv2.HOUGH_GRADIENT,
        dp=1.2,
        minDist=50,
        param1=100,
        param2=30,
        minRadius=20,
        maxRadius=100
    )

    if circles is not None:
        circles = np.uint16(np.around(circles))  # Round values to integers
        for circle in circles[0, :]:
            x, y, radius = circle
            # Draw the circle
            cv2.circle(video, (x, y), radius, (0, 255, 0), 2)
            # Draw the center
            cv2.circle(video, (x, y), 3, (0, 0, 255), -1)
            # Display the coordinates of the center
            cv2.putText(video, f"({x}, {y})", (x - 50, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (255, 255, 255), 1)

    # Show the mask and the video feed with detected circles
    # cv2.imshow("Mask Image", red_mask)
    cv2.imshow("Video Feed", video)

    # Exit the loop if 'q' is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release resources
webcam_video.release()
cv2.destroyAllWindows()
 
